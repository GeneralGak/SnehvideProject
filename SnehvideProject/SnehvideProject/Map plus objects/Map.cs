using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SnehvideProject
{
    class Map : MapObject
    {
        public static AppleMonster monster;
        public static Fighter dwarf;
        public static MouseControl cursor;

        public Map()
        {
            GenerateLevel(new int[,]
            {
                // 44 * 22
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
                {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
          /*5*/ {1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
                {1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
                {1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
                {1,1,1,1,1,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         ///*10*/ {0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,1,1,1*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,1,1,1,2,2*/},
         ///*15*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1/*,1,1,2,2,2,2*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2/*,2,2,2,2,2,2*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2/*,2,2,2,2,2,2*/},
         //       {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2/*,2,2,2,2,2,2*/},
         //       {0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2/*,2,2,2,2,2,2*/},
         ///*20*/ {0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2/*,2,2,2,2,2,2*/},
         //       {0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2/*,2,2,2,2,2,2*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,2/*,2,2,2,2,2,2*/},
            }, new int[,]
            {
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,1,1,0,1,0,1,0,0,0,1,2,0,1,0/*,0,1,1,2,0,1*/},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,2,1,0,0,1,0,0,1,1,0,1,1,0,1,0,0/*,1,1,0,0,1,0*/},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,0,1,0,1,0,2,0,1/*,1,1,0,1,0,0*/},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,1,0,1,0,0,1,1,0,2/*,0,0,1,0,1,1*/},
          /*5*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,0,1,0,1,2,1,0,0,1,0,2,1,0,0,1,0/*,1,1,0,0,0,1*/},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,1,0,0,0,1,1,1,2,0,0,1,1,1,1/*,0,1,0,1,0,2*/},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,2,0,1,0,1,0,1,1,0,1,0,1,0,0,1,0,1,0/*,1,0,1,1,0,1*/},
                {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,2,1,1,1,0,0,0,2,0,1,1,1,0,0,0/*,0,0,0,1,1,1*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1,0,1,1,0,1,0,1,1,0,0,1,0,1/*,2,0,1,0,0,1*/},
         ///*10*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,1,1,0,0,1,1,0,1,0,1,1,1,2,0,0,0,1,0,1,1,0/*,0,1,1,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,2,0,0,0,1,0,0,1,1,0,0,0,0,1,2,0,1,0,0,0,1,0/*,0,2,0,0,1,1*/},
         //       {0,0,1,0,1,1,1,0,0,0,2,1,1,0,1,1,0,1,1,1,0,2,2,0,1,0,1,0,0,0,0,2,0,0,1,0,0/*,0,0,0,0,0,0*/},
         //       {0,1,0,0,2,2,0,1,0,0,0,0,1,1,0,0,0,0,0,1,2,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {1,0,0,1,0,0,1,1,0,0,1,0,0,0,2,1,1,0,1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         ///*15*/ {0,2,1,1,0,0,1,0,0,1,0,2,0,1,1,0,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {1,0,0,0,1,1,0,1,1,0,0,1,0,1,0,1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {1,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         ///*20*/ {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
         //       {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0/*,0,0,0,0,0,0*/},
            },
            GameWorld.TileSize);

            monster = new AppleMonster(new Vector2(100, 100));
            dwarf = new Fighter(new Vector2(500, 500));
            cursor = new MouseControl();
            GameWorld.GameObjects.Add(monster);
            GameWorld.GameObjects.Add(dwarf);
            GameWorld.GameObjects.Add(cursor);
        }
    }
}
